{"version":3,"sources":["Result.js","BoutonListe.js","Tableau.js","App.js","serviceWorker.js","index.js"],"names":["Result","fromAmount","fromCurrency","toAmount","toCurrency","actualRate","res","parseFloat","toFixed","newSize","parseInt","length","className","id","style","fontSize","BoutonListe","tabIndex","text","Tableau","styli","tableauO","noms","map","element","index","key","nav","move","activeE","document","activeElement","next","targetElement","querySelectorAll","undefined","focus","nodeName","App","state","montant","montantRes","elementActif","deviseReference","deviseListeG","deviseListeD","dateUpdate","styleTab","tableauZero","nomDevises","lastChange","handleKeydown","e","console","log","checkRateUpdate","target","changeDevise","childNodes","parentElement","showList","switchCurrencies","preventDefault","getElementById","setState","this","newRate","findRate","devise","i","c","deviseGauche","deviseDroite","findIndice","newDevise","newDeviseG","newDeviseD","Date","getTheRates","value","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","DONE","status","localStorage","setItem","responseText","getItem","alert","location","reload","jsonRates","myObj","JSON","parse","rates","push","sort","base","timestamp","fillTab","bind","open","send","maListe","addEventListener","listeId","addAdvert","window","getKaiAd","publisher","app","test","onerror","err","error","onready","ad","button","btnListener","removeEventListener","call","type","name","placeholder","onChange","updateConv","src","alt","toString","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.efd08901.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Result = ({ fromAmount, fromCurrency, toAmount, toCurrency, actualRate }) => \n{\n\n  const res = parseFloat(fromAmount).toFixed(2)+' '+fromCurrency+' = '+parseFloat(toAmount).toFixed(2)+' '+toCurrency,\n        newSize = parseInt(400/res.length);\n\nreturn (\n    <div className=\"result\">\n        <div className='overflow' id=\"result\" style={{fontSize: newSize+'px'}}>\n            {res}\n        </div>\n        <div className='txdechange' id='txdechange'>\n            1.00 {fromCurrency} = {parseFloat(actualRate).toFixed(4)} {toCurrency} - \n            1.00 {toCurrency} = {parseFloat(1/actualRate).toFixed(4)} {fromCurrency}\n        </div>\n    </div>\n  )\n}\n  \n  Result.propTypes = {\n    fromAmount:   PropTypes.number.isRequired,\n    fromCurrency: PropTypes.string.isRequired,\n    toAmount:     PropTypes.number.isRequired,\n    toCurrency:   PropTypes.string.isRequired,\n    actualRate:   PropTypes.number.isRequired,\n  }\n\nexport default Result","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst BoutonListe = ({ id, tabIndex, text}) => (\n        <div className='Liste items' \n             id = {id}\n             tabIndex = {tabIndex}>\n            {text}\n        </div>\n  )\n  \n  BoutonListe.propTypes = {\n    id: PropTypes.string.isRequired,\n    tabIndex: PropTypes.number.isRequired,\n  }\n\nexport default BoutonListe","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Tableau = ({ styli, tableauO, noms }) => (\n  <div id=\"cover\" className={styli}>\n    <table>\n        <thead>\n            <tr>\n                <th>CURRENCIES</th>\n            </tr>\n        </thead>\n        <tbody id='tableau'>\n        {tableauO.map((element, index) => (\n                <tr key={index}>\n                    <td\n                        id={element[0]}\n                        className='items'\n                        tabIndex={index+4}\n                    >{element[0]}<br></br>{noms[element[0]]}\n                    </td>\n                </tr>\n        ))}\n        </tbody>\n    </table>\n  </div>\n)\n\n  Tableau.propTypes = {\n    styli:   PropTypes.oneOf([\n      'hidden',\n      'overlay',\n    ]).isRequired,\n    tableauO:  PropTypes.array.isRequired,\n    noms: PropTypes.object.isRequired,\n  }\n\nexport default Tableau","import React, { Component } from 'react'\n\nimport './App.css'\nimport Result from './Result'\nimport BoutonListe from './BoutonListe'\nimport Tableau from './Tableau'\n\n\nfunction nav(move) {\n    const activeE = document.activeElement;   \n    const currentIndex = activeE.tabIndex;\n    const next = currentIndex + move;\n    const items = document.querySelectorAll('.items');\n    const targetElement = items[next];\n    if(targetElement !== undefined)\n        targetElement.focus()\n    \n    /* Petite bidouille suite à l'affichage de la pub qui perturbe le CSS */\n    if(activeE.nodeName === 'BODY')\n        activeE.style = '';\n}\n\n\nclass App extends Component {\n    state = {\n        montant : '',\n        montantRes : 0,\n        elementActif : 0,\n        deviseReference : '',\n        deviseListeG : 'EUR',\n        deviseListeD : 'USD',\n        actualRate : 0,\n        dateUpdate : 'NEED TO GET THE RATES ONLINE',\n        styleTab: \"hidden\",\n        tableauZero : [],\n        nomDevises: {},\n        lastChange: null,\n    }\n\n    \n    switchCurrencies() {\n        const {montant, deviseListeG, deviseListeD}= this.state\n        const newRate = this.findRate(deviseListeD, deviseListeG)\n\n        this.setState({ deviseListeG: deviseListeD,\n                        deviseListeD: deviseListeG,\n                        montantRes : montant * newRate,\n                        actualRate : newRate})\n    }\n    \n    /* renvoi l'index dans le tableauO de la devise en arguement */\n    findIndice(devise) {\n        for (var i = 0, c = this.state.tableauZero.length; i < c; i++) {\n            if (this.state.tableauZero[i][0] === devise)\n                return i;\n        }\n    }\n \n    /* Renvoi le taux de conversion */\n    findRate(deviseGauche, deviseDroite) {\n        var rate;\n        const tableauO = this.state.tableauZero;\n\n        if (deviseGauche === this.state.deviseReference) {\n            rate = tableauO[this.findIndice(deviseDroite)][1];\n        } else if (deviseDroite === this.state.deviseReference) {\n            rate = 1 / tableauO[this.findIndice(deviseGauche)][1];\n        } else {\n            rate = tableauO[this.findIndice(deviseDroite)][1] / tableauO[this.findIndice(deviseGauche)][1];\n        }\n        return rate;\n    }\n    \n    changeDevise(newDevise){\n\n        const {montant, lastChange, deviseListeG, deviseListeD}= this.state\n\n        var newDeviseG = deviseListeG, newDeviseD = deviseListeD\n        \n        if(lastChange === 'ListeG')\n            newDeviseG = newDevise\n        else \n            newDeviseD = newDevise\n        \n        const newRate = this.findRate(newDeviseG, newDeviseD)\n        \n        /* On enlève la liste et on focus */\n        document.getElementById(lastChange).focus()\n        this.setState({ deviseListeG: newDeviseG,\n                        deviseListeD: newDeviseD,\n                        actualRate  : newRate,\n                        montantRes  : montant * newRate,\n                        styleTab: 'hidden' })\n                        \n    }\n    \n\n    /// NAVIGATION D-PAD ///\n    // Arrow fx for binding\n    handleKeydown = e => {\n\n        console.log(e.key)\n        // check if rates update is needed\n        this.checkRateUpdate();\n        \n        switch (e.key) {\n            case 'ArrowUp':\n                if((e.target.nodeName === 'TD' && e.target.tabIndex > 4)\n                || e.target.nodeName !== 'TD')\n                    nav(-1);\n                    break;\n                    case 'ArrowDown':\n                        if((e.target.nodeName !== 'TD' && e.target.tabIndex < 3)\n                    || e.target.nodeName === 'TD')\n                    nav(1);\n                    break;\n                    case 'Enter':\n                        if(e.target.nodeName === 'TD'){\n                            this.changeDevise(e.target.childNodes[0].parentElement.id);\n                        } else {\n                            switch (e.target.id) {\n                                case 'ListeG': //same for listeG et listeD\n                                case 'ListeD':\n                                    this.showList(e.target.id);\n                                    break;\n                                    case 'doublefleche':\n                                        this.switchCurrencies()\n                                        break;\n                                        default:\n                                            break;\n                                        }\n                                    }\n                                    break;\n                                   \n                case 'Backspace':\n                    console.log('TEST') \n                    if(e.target.nodeName === 'TD'){\n                        e.preventDefault();               \n                        document.getElementById(this.state.lastChange).focus()\n                        this.setState({ styleTab: 'hidden' })\n                    }\n                break;\n            default:\n                break;\n        }\n    }\n\n    // check if rates update is needed\n    checkRateUpdate(){\n        const dateUpdate = this.state.dateUpdate;\n        \n        if(typeof dateUpdate === \"number\"){\n            const timeSinceLastUpdate  = new Date() - dateUpdate;\n            const timeMaxWithOutUpdate = 21600000 // 6h = 6 * 60 * 60 * 1000 = 21600000\n\n            if (timeSinceLastUpdate > timeMaxWithOutUpdate)\n                this.getTheRates();\n        }\n    }\n\n    updateConv(e){\n       this.setState({ montant: e.target.value,\n                       montantRes: parseFloat(e.target.value) * this.state.actualRate })\n    }\n \n    ////////////GET RATES FROM NEW API BEGIN ///////////\n    getTheRates() {\n        var xmlhttp = new XMLHttpRequest();\n        xmlhttp.onreadystatechange = function(e) {\n            /* if the transfert is \"done\" */\n            if (xmlhttp.readyState === XMLHttpRequest.DONE) {\n\n                /* update the localstorage rates if it's OK */\n                if(xmlhttp.status === 200)\n                    localStorage.setItem(\"jsonRates\", xmlhttp.responseText);\n                \n                /* alert if we don't have rates even offline in localstorage */\n                if(!localStorage.getItem(\"jsonRates\")){\n                    alert('Please activate the internet connexion in order to get the rates.\\n'+\n                    'After you get the rates 1 time then you can stay offline');\n                    \n                    // Recharge la page\n                    document.location.reload();\n                }                \n                \n                /* get the localstorage rates and parse from json format */\n                var jsonRates = localStorage.getItem(\"jsonRates\");\n                var myObj = JSON.parse(jsonRates);\n\n                /* On rempli le tableau global avec les devises et les taux */\n                var newRate=1;\n                var tableauO = []\n                for (var i in myObj.rates){\n                    tableauO.push([i, parseFloat(myObj.rates[i])]);\n                    if (i === 'EUR') // On en profite pour récupérer le tx EUR/USD\n                        newRate = parseFloat(myObj.rates[i])\n                }\n                /* on en profite pour trier dans l'ordre alphabétique */\n                tableauO.sort();\n                \n                /* MAJ de les états (date, taux, conversion, tableau) */\n                this.setState({ tableauZero : tableauO,\n                                montantRes  : this.state.montant * newRate,\n                                actualRate  : newRate,\n                                deviseReference : myObj.base,\n                                dateUpdate  : myObj.timestamp*1000})\n//new Date(myObj.timestamp*1000).toString()\n                /* On rempli le tableau complet en arrière plan */\n                this.fillTab()\n            }\n            \n        }.bind(this)\n        \n\n        xmlhttp.open(\"GET\", 'https://openexchangerates.org/api/latest.json?app_id=6848de5224cf47ebac7a7faabc2a529a', true);\n        xmlhttp.send();\n    }\n\n    fillTab () {\n\n        var xmlhttp = new XMLHttpRequest();\n        xmlhttp.onreadystatechange = function(e) {\n            if(xmlhttp.status === 200 && xmlhttp.readyState === 4){\n                var maListe = JSON.parse(xmlhttp.responseText)\n                this.setState({nomDevises : maListe})\n            }\n        }.bind(this)\n    \n        xmlhttp.open(\"GET\",\"data/currenciesList.json\", true);\n        xmlhttp.send();\n    }\n\n\n    \n    componentDidMount(){\n\n        this.getTheRates()\n\n        // Make the D-PAD navigation possible\n        document.activeElement.addEventListener('keydown', this.handleKeydown);\n        \n        const e = document.getElementById('montant')\n        if(e !== null)\n            e.focus();\n    }\n\n    showList(listeId) {\n        \n        // Deja on charge la pub en tache de fond\n        this.addAdvert(listeId);\n\n        // On affiche le tableau des devises\n        this.setState({styleTab : \"overlay\", lastChange : listeId});\n    \n        // On focus sur le bon élément du tableau\n        if(listeId === 'ListeG')\n            document.getElementById(this.state.deviseListeG).focus();\n        else\n            document.getElementById(this.state.deviseListeD).focus();\n    }\n\n    addAdvert(element){\n        window.getKaiAd({\n            publisher: '8378d86d-8018-4346-8af2-3be8ddbd0cb3',\n            app: 'ExCurrency',\n            test: 0, //1 for test, 0 for prod\n            onerror: err => console.error('Custom catch:', err),\n            onready: ad => {\n                // Ad is ready to be displayed\n                // custom event\n                let button = document.getElementById(element)\n                button.addEventListener('focus', function btnListener() {\n                    button.removeEventListener('focus', btnListener)\n                    // calling 'display' will display the ad\n                    ad.call('display');\n\n                })\n            }\n        });\n    }\n\n    render() {\n      const {montant,\n             montantRes,\n             deviseListeG,\n             deviseListeD,\n             actualRate,\n             dateUpdate,\n             styleTab,\n             tableauZero,\n             nomDevises }= this.state     \n             \n             \n        \n\n\n      return (<div>\n          <div id=\"conteneur\">\n                <input\n                    className='items'\n                    type=\"tel\"\n                    tabIndex={0}\n                    name='montant'\n                    id='montant'\n                    placeholder='Amount'\n                    value={montant}\n                    onChange = {(e) => this.updateConv(e)}\n                    />\n\n                <BoutonListe id=\"ListeG\" tabIndex={1} text={this.state.deviseListeG}/> \n\n                <img id='doublefleche' className='doublefleche items' tabIndex={2} src=\"/img/iconmonstr-cursor-15-24.png\" alt=\"Toggle\" />\n\n                <BoutonListe id=\"ListeD\" tabIndex={3} text={this.state.deviseListeD}/> \n                \n                <Result fromAmount = {(montant.length > 0) ? parseFloat(montant) : 1}\n                        fromCurrency = {deviseListeG}\n                        toAmount = {(montant.length > 0) ? montantRes : actualRate}\n                        toCurrency = {deviseListeD}\n                        actualRate = {actualRate}\n                />\n        </div>\n            <div id='updateDate'>Update : {new Date(dateUpdate).toString()}</div>\n            <Tableau styli={styleTab} tableauO={tableauZero} noms={nomDevises}/>\n        </div>\n      )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}